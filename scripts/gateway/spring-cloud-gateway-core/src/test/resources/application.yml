test:
  hostport: httpbin.org:80
#  hostport: localhost:5000
#  uri: http://${test.hostport}
  uri: lb://testservice

spring:
  cloud:
    gateway:
      default-filters:
      - AddResponseHeader=X-Response-Default-Foo, Default-Bar
      - PrefixPath=/httpbin

      # TODO: breakup configuration for individual tests (though some are reused)
      routes:
      # =====================================
      - host_example_to_httpbin=${test.uri}, Host=**.example.org

      # =====================================
      - id: host_foo_path_headers_to_httpbin
        uri: ${test.uri}
        predicates:
        - Host=**.foo.org
        - Path=/headers
        - Method=GET
        - Header=X-Request-Id, \d+
        - Query=foo, ba.
        - Query=baz
        - Cookie=chocolate, ch.p
        - After=1900-01-20T17:42:47.789-07:00[America/Denver]
        filters:
        - AddResponseHeader=X-Response-Foo, Bar

      # =====================================
      - id: add_request_header_test
        uri: ${test.uri}
        predicates:
        - Host=**.addrequestheader.org
        - Path=/headers
        filters:
        - AddRequestHeader=X-Request-Foo, Bar

      # =====================================
      - id: add_request_parameter_test
        uri: ${test.uri}
        predicates:
        - Host=**.addrequestparameter.org
        - Path=/get
        filters:
        - AddRequestParameter=foo, bar

      # =====================================
      - id: add_response_header_test
        uri: ${test.uri}
        predicates:
        - Host=**.addresponseheader.org
        - Path=/headers
        filters:
        - AddResponseHeader=X-Request-Foo, Bar

      # =====================================
      - id: forward_test
        uri: forward:/localcontroller
        predicates:
        - Host=**.forward.org

      # =====================================
      - id: hystrix_failure_test
        uri: ${test.uri}
        predicates:
        - Host=**.hystrixfailure.org
        filters:
        - Hystrix=failcmd

      # =====================================
      - id: hystrix_fallback_test
        uri: ${test.uri}
        predicates:
        - Host=**.hystrixfallback.org
        filters:
        - name: Hystrix
          args:
            name: fallbackcmd
            fallbackUri: forward:/fallbackcontroller

      # =====================================
      - id: hystrix_success_test
        uri: ${test.uri}
        predicates:
        - Host=**.hystrixsuccess.org
        filters:
        - Hystrix=successcmd

      # =====================================
      - id: load_balancer_client_test
        uri: lb://myservice
        predicates:
        - Host=**.loadbalancerclient.org

      # =====================================
      - id: load_balancer_client_empty_test
        uri: lb://serviceshouldnotexistanywhere
        predicates:
        - Host=**.loadbalancerclientempty.org

      # =====================================
      - id: method_test
        uri: ${test.uri}
        predicates:
        - Method=GET
        - Host=**.method.org

      # =====================================
      - id: not_between_test
        uri: ${test.uri}
        predicates:
        - Host=**.notbetween.org
        - Between=1000-03-13T10:39:37.518-04:00[America/New_York],1002-03-13T10:39:37.518-04:00[America/New_York]

      # =====================================
      - id: path_test
        uri: ${test.uri}
        predicates:
        - Path=/{org}/{scope}/function
        - Host=**.path.org
        filters:
        - SetPath=/anything/{org}{scope}

      # =====================================
      - id: redirect_to_test
        uri: ${test.uri}
        predicates:
        - Host=**.redirectto.org
        filters:
        - RedirectTo=302, http://example.org

      # =====================================
      - id: remove_request_header_test
        uri: ${test.uri}
        predicates:
        - Host=**.removerequestheader.org
        - Path=/headers
        filters:
        - RemoveRequestHeader=X-Request-Foo

      # =====================================
      - id: remove_response_header_test
        uri: ${test.uri}
        predicates:
        - Host=**.removereresponseheader.org
        - Path=/headers
        filters:
        - AddResponseHeader=X-Request-Foo, Bar
        - RemoveResponseHeader=X-Request-Foo

      # =====================================
      - id: retry_test
        uri: ${test.uri}
        predicates:
        - Path=/retry
        filters:
        - Retry

      # =====================================
      - id: secure_headers_test
        uri: ${test.uri}
        predicates:
        - Host=**.secureheaders.org
        - Path=/headers
        filters:
        - SecureHeaders

      # =====================================
      - id: set_path_test
        uri: ${test.uri}
        predicates:
        - Host=**.setpath.org
        - Path=/foo/{segment}
        filters:
        - SetPath=/{segment}

      # =====================================
      - id: strip_prefix_test
        uri: ${test.uri}
        predicates:
        - Host=**.stripprefix.org
        - Path=/foo/**
        filters:
        - StripPrefix=2

      # =====================================
      - id: set_response_header_test
        uri: ${test.uri}
        predicates:
        - Host=**.setreresponseheader.org
        - Path=/headers
        filters:
        - AddResponseHeader=X-Request-Foo, Bar1
        - AddResponseHeader=X-Request-Foo, Bar2
        - SetResponseHeader=X-Request-Foo, Bar

      # =====================================
      - id: set_status_int_test
        uri: ${test.uri}
        predicates:
        - Host=**.setstatusint.org
        - Path=/headers
        filters:
        - name: SetStatus
          args:
            status: 401

      # =====================================
      - id: set_status_string_test
        uri: ${test.uri}
        predicates:
        - Host=**.setstatusstring.org
        - Path=/headers
        filters:
        - SetStatus=BAD_REQUEST

      # =====================================
      - id: rewrite_path_test
        uri: ${test.uri}
        predicates:
        - Host=**.baz.org
        - RemoteAddr=127.0.0.1/24
        filters:
        # $\ is being used as an escape
        - RewritePath=/foo/(?<segment>.*), /$\{segment}
        - AddRequestHeader=X-Request-Foo, Bar
        - AddRequestHeader=X-Request-Baz, Bat

      # =====================================
      - id: weight_high_test
        uri: ${test.uri}
        predicates:
        - Host=**.weighthigh.org
        - Weight=group1, 8

      # =====================================
      - id: header_test
        uri: ${test.uri}
        predicates:
        - Header=Foo, .*

      # =====================================
      - id: change_uri_test
        uri: ${test.uri}
        predicates:
        - Host=**.changeuri.org
        - Header=X-CF-Forwarded-Url
        filters:
        - RequestHeaderToRequestUri=X-CF-Forwarded-Url

      # =====================================
      - id: default_path_to_httpbin
        uri: ${test.uri}
        order: 10000
        predicates:
        - name: Path
          args:
            pattern: /**

hystrix.command.successcmd.execution.isolation.thread.timeoutInMilliseconds: 5000

logging:
  level:
    org.springframework.cloud.gateway: TRACE
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.ipc.netty: DEBUG
    redisratelimiter: DEBUG

eureka:
  client:
    enabled: false
#  port: 8081

