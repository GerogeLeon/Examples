#!/bin/bash

realpath () {
(
  TARGET_FILE="$1"

  cd $(dirname "$TARGET_FILE")
  TARGET_FILE=$(basename "$TARGET_FILE")

  COUNT=0
  while [ -L "$TARGET_FILE" -a ${COUNT} -lt 100 ]
  do
      TARGET_FILE=$(readlink "$TARGET_FILE")
      cd $(dirname "$TARGET_FILE")
      TARGET_FILE=$(basename "$TARGET_FILE")
      COUNT=$(($COUNT + 1))
  done

  if [ "$TARGET_FILE" == "." -o "$TARGET_FILE" == ".." ]; then
    cd "$TARGET_FILE"
    TARGET_FILEPATH=
  else
    TARGET_FILEPATH=/${TARGET_FILE}
  fi

  # make sure we grab the actual windows path, instead of cygwin's path.
  if ! is_cygwin; then
    echo "$(pwd -P)/$TARGET_FILE"
  else
    echo $(cygwinpath "$(pwd -P)/$TARGET_FILE")
  fi
)
}

# Uses uname to detect if we're in the odd cygwin environment.
is_cygwin() {
  local os=$(uname -s)
  case "$os" in
    CYGWIN*) return 0 ;;
    *)  return 1 ;;
  esac
}


if [[ -z "${REACTIVE_AUDIT_HOME}" ]]
then
  declare REACTIVE_AUDIT_HOME="$(dirname "${BASH_SOURCE[0]}")/.."
else
  declare REACTIVE_AUDIT_HOME="$(realpath "${REACTIVE_AUDIT_HOME}")"
fi

echo "BASH_SOURCE=${BASH_SOURCE}"
RP=$(readlink $(basedir ${BASH_SOURCE})
echo "REAL_BASH_SOURCE=${BASH_SOURCE}/${RP}"
RRP=${BASH_SOURCE}/${RP}
echo "RRP=$(realpath ${RRP})"
echo "PATH_BASH_SOURCE=$(realpath ${BASH_SOURCE}/$(readlink ${BASH_SOURCE}))"

FRAMEWORK_HOME="$(readlink ${BASH_SOURCE[0]})/etc"
${REACTIVE_AUDIT_HOME} "${FRAMEWORKS_HOME}/../reactive-audit-agent/bin/reactive-audit"
