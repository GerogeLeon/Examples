<!--
  ~ Copyright 2014 OCTO Technology
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<root>
    <item name='com.octo.reactive.audit.java.util.concurrent.locks.AbstractQueuedLongSynchronizerTest'>
        <annotation name='java.lang.SuppressWarnings'>
            <val val="&quot;EmptyClass&quot;"/>
        </annotation>
    </item>
    <item name='com.octo.reactive.audit.java.util.concurrent.locks.AbstractQueuedSynchronizerTest'>
        <annotation name='java.lang.SuppressWarnings'>
            <val val="{&quot;EmptyClass&quot;, &quot;WeakerAccess&quot;}"/>
        </annotation>
    </item>
    <item name='com.octo.reactive.audit.java.util.concurrent.locks.ConditionAudit'>
        <annotation name='java.lang.SuppressWarnings'>
            <val val="&quot;WeakerAccess&quot;"/>
        </annotation>
    </item>
    <item name='com.octo.reactive.audit.java.util.concurrent.locks.LockAudit'>
        <annotation name='java.lang.SuppressWarnings'>
            <val val="&quot;WeakerAccess&quot;"/>
        </annotation>
    </item>
    <item name='com.octo.reactive.audit.java.util.concurrent.locks.ReadWriteLockAudit'>
        <annotation name='java.lang.SuppressWarnings'>
            <val val="&quot;WeakerAccess&quot;"/>
        </annotation>
    </item>
    <item name='com.octo.reactive.audit.java.util.concurrent.locks.StampedLockAudit'>
        <annotation name='java.lang.SuppressWarnings'>
            <val val="&quot;WeakerAccess&quot;"/>
        </annotation>
    </item>
</root>
